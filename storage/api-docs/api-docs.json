{
    "openapi": "3.0.0",
    "info": {
        "title": "APIs For Thrift Store",
        "version": "1.0.0"
    },
    "paths": {
        "/api/comments": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Get all comments",
                "operationId": "0406f270b674fae17bf23b4206a3004f",
                "responses": {
                    "200": {
                        "description": "List of comments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CommentResource"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/like": {
            "get": {
                "tags": [
                    "likes"
                ],
                "summary": "Display a listing of the likes.",
                "operationId": "2d12ae81a7133f8b7b74c2c7a2e4934c",
                "responses": {
                    "200": {
                        "description": "A list of likes.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LikeResource"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/posts/like": {
            "post": {
                "tags": [
                    "likes"
                ],
                "summary": "Store a newly created like.",
                "operationId": "9b1efd08c60e934cd1ef72bf83d9ca3e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LikeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The created like.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LikeResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found."
                    }
                }
            }
        },
        "/api/like/update/{id}": {
            "put": {
                "tags": [
                    "likes"
                ],
                "summary": "Update the specified like.",
                "operationId": "a6dbe41b2ee30514e032e94bb385b4be",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the like.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LikeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated like.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LikeResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Like not found."
                    }
                }
            }
        },
        "/api/posts/{id}/unlike": {
            "delete": {
                "tags": [
                    "likes"
                ],
                "summary": "Remove the specified like from storage.",
                "operationId": "b70fc721049113c313b4ff9209ad81bc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the like.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post unliked successfully."
                    },
                    "404": {
                        "description": "Like not found."
                    }
                }
            }
        },
        "/api/post": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get all Posts",
                "operationId": "b4b7284c8fb22330a82699a8356a5e88",
                "responses": {
                    "200": {
                        "description": "List of posts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PostResource"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/post/create": {
            "post": {
                "tags": [
                    "Posts"
                ],
                "summary": "Create a new post",
                "operationId": "83ca41b942028bde6d7abc0d3c6e3bef",
                "requestBody": {
                    "description": "Post data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Post created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "title": [
                                                    "The title field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/post/{id}": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Display the specified post",
                "operationId": "239ae40d24d82380dd09557f9614ad9e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the post to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post details found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/post/update/{id}": {
            "put": {
                "tags": [
                    "Posts"
                ],
                "summary": "Update a post",
                "operationId": "806e7ca3e49d5a2f65d5a24631345350",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the post to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Post data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/post/delete/{id}": {
            "delete": {
                "tags": [
                    "Posts"
                ],
                "summary": "Delete a post",
                "operationId": "dfec3b56737dd572784031f776947020",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the post to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Post deleted successfully"
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "operationId": "971db9bc974c0e607288cfe7ecc10096",
                "responses": {
                    "200": {
                        "description": "List of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserResource"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/update/updateProfile/{id}": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update a user",
                "operationId": "6f5d645e6a674b7f92ce0351ae9a3e52",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Users",
            "description": "Endpoints for managing users"
        }
    ]
}